apiVersion: v1
kind: ServiceAccount
metadata:
  name: tsb-envoy-secret-watcher
  namespace: tsb
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: tsb
  name: tsb-envoy-secret-watcher
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tsb-envoy-secret-watcher
  namespace: tsb
subjects:
- kind: ServiceAccount
  name: tsb-envoy-secret-watcher
  namespace: tsb
roleRef:
  kind: Role
  name: tsb-envoy-secret-watcher
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tsb-envoy-secret-watcher-script
  namespace: tsb
data:
  tsb-envoy-secret-watcher.sh: |
    #!/bin/bash

    SECRET_NAME=${SECRET_NAME}
    SECRET_NAMESPACE=${SECRET_NAMESPACE}
    DEPLOYMENT_TO_RESTART=${DEPLOYMENT_TO_RESTART}
    SLEEP_DURATION=${SLEEP_DURATION:-5}  # Default sleep duration is set to 5 seconds

    PREVIOUS_RESOURCE_VERSION=""
    CURRENT_RESOURCE_VERSION=""

    while true; do
      # Get the current resource version of the Secret
      CURRENT_RESOURCE_VERSION=$(kubectl get secret "$SECRET_NAME" -n "$SECRET_NAMESPACE" -o jsonpath='{.metadata.resourceVersion}')
      
      if [ "$CURRENT_RESOURCE_VERSION" != "$PREVIOUS_RESOURCE_VERSION" ]; then
        if [ -n "$PREVIOUS_RESOURCE_VERSION" ]; then
          echo "Secret $SECRET_NAME modified in namespace $SECRET_NAMESPACE. Previous resource version: $PREVIOUS_RESOURCE_VERSION, Current resource version: $CURRENT_RESOURCE_VERSION. Restarting Deployment $DEPLOYMENT_TO_RESTART."
          kubectl rollout restart deployment "$DEPLOYMENT_TO_RESTART" -n "$SECRET_NAMESPACE"
        fi
        PREVIOUS_RESOURCE_VERSION="$CURRENT_RESOURCE_VERSION"
      fi

      # Sleep for the specified duration before checking again
      sleep $SLEEP_DURATION
    done
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tsb-envoy-secret-watcher
  namespace: tsb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tsb-envoy-secret-watcher
  template:
    metadata:
      labels:
        app: tsb-envoy-secret-watcher
    spec:
      serviceAccountName: tsb-envoy-secret-watcher
      volumes:
      - name: script
        configMap:
          name: tsb-envoy-secret-watcher-script
      containers:
      - name: tsb-envoy-secret-watcher
        image: bitnami/kubectl
        volumeMounts:
        - name: script
          mountPath: /scripts
        env:
        - name: SECRET_NAME
          value: "tsb-certs"
        - name: SECRET_NAMESPACE
          value: "tsb"
        - name: DEPLOYMENT_TO_RESTART
          value: "envoy"
        - name: SLEEP_DURATION
          value: "5"
        command: ["/bin/bash"]
        args: ["/scripts/tsb-envoy-secret-watcher.sh"]
