---
# Service C
apiVersion: v1
kind: Service
metadata:
  name: svc-d
  labels:
    app: svc-d
    service: svc-d
spec:
  ports:
  - name: http
    port: 80
    targetPort: 9080
  selector:
    app: svc-d

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: svc-d
  labels:
    app: svc-d
spec:
  replicas: 2
  selector:
    matchLabels:
      app: svc-d
  template:
    metadata:
      labels:
        app: svc-d
        version: v1
    spec:
      containers:
      # HTTPBin backend
      - name: httpbin
        image: docker.io/kennethreitz/httpbin:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          protocol: TCP
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      # Giraffe sidecar (100% healthy)
      - name: giraffe-sidecar
        image: us-east1-docker.pkg.dev/dogfood-cx/registryrepository/giraffe:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 9080
          protocol: TCP
        env:
        - name: SERVICE_NAME
          value: "svc-d-sidecar"
        - name: SERVICE_VERSION
          value: "v1"
        - name: SERVICE_PORT
          value: "9080"
        - name: HOMEPAGE_NAME
          value: "svc-d"
        - name: UPSTREAM_URLS
          value: "http://localhost:80"
        - name: CALL_UPSTREAMS
          value: "true"
        - name: ERROR_RATE
          value: "0.00"  # 100% healthy - 0% error rate
        - name: ERROR_STATUS_CODE
          value: "503"
        - name: ERROR_MESSAGE
          value: "svc-d temporarily unavailable"
        - name: RESPONSE_FIELD_BACKEND_TIER
          value: "core-backend-with-sidecar"
        - name: RESPONSE_FIELD_ERROR_INJECTION
          value: "disabled"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
